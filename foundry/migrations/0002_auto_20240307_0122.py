# Generated by Django 3.2.25 on 2024-03-07 01:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0083_workflowcontenttype'),
        ('foundry', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComparableCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('industry', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Comparable Company',
                'verbose_name_plural': 'Comparable Companies',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StartupApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('business_description', models.TextField()),
                ('legal_structure', models.CharField(choices=[('C Corp', 'C Corp'), ('LLC', 'LLC'), ('Partnership', 'Partnership'), ('Non-Profit', 'Non-Profit')], max_length=50)),
                ('ownership_structure', models.CharField(max_length=50)),
                ('pitch_deck', models.FileField(blank=True, help_text='Document Upload', null=True, upload_to='')),
                ('annual_revenue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('funding_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('outstanding_debt', models.DecimalField(decimal_places=2, max_digits=10)),
                ('founder_names', models.CharField(max_length=255)),
                ('team_members', models.TextField(blank=True, help_text='If you have employees on payroll list them here', null=True)),
                ('advisors_mentors', models.TextField(blank=True, null=True)),
                ('target_audience', models.TextField(help_text='Primary and Secondary Markets')),
                ('competition_analysis', models.TextField(help_text='List your closest Competitors')),
                ('market_demand_proof', models.TextField(help_text='Any research, surveys or signups you have summarize them here')),
                ('marketing_strategy', models.TextField(help_text='Your marketing plans other then paid advertising')),
                ('development_stage', models.CharField(choices=[('Idea Stage', 'Idea Stage'), ('Market Fit', 'Market Fit'), ('Proof of Concept', 'Proof of Concept'), ('MVP', 'MVP'), ('Growth Stage', 'Growth Stage')], max_length=50)),
                ('intellectual_property', models.TextField(help_text='What IP have your registered or plan to register')),
                ('customer_base', models.TextField(help_text='Have you Identified your Users or Personas')),
                ('customer_acquisition_strategy', models.TextField(help_text='What is your plan to get them to pay for/use your product')),
                ('current_funding_sources', models.TextField()),
                ('future_funding_plans', models.TextField()),
                ('regulatory_compliance', models.TextField(blank=True, help_text='Any Government or other compliance issues you need to address', null=True)),
                ('legal_issues', models.TextField(blank=True, help_text='What if/any possible legal or regulatory issues have you identified', null=True)),
                ('scalability', models.TextField(help_text='How well will your product scale')),
                ('expansion_plans', models.TextField(blank=True, help_text='How do you plan to grow and expand', null=True)),
                ('social_impact', models.TextField(blank=True, help_text='Do you have a social mission or see a positive social impact with your product', null=True)),
                ('revenue_model', models.CharField(choices=[('B2B', 'B2B'), ('B2C', 'B2C'), ('B2G', 'B2G'), ('B2B2C', 'B2B2C')], max_length=50)),
                ('pricing_strategy', models.TextField()),
                ('competitive_advantage', models.TextField()),
                ('milestones_achievements', models.TextField(help_text='List Milestones/Acheivments so far for your Product')),
                ('references_recommendations', models.TextField(blank=True, help_text='Customer or Investor References', null=True)),
                ('alignment_with_mission', models.TextField(blank=True, null=True)),
                ('support_requested', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('originality_score', models.FloatField(default=0.0)),
                ('marketability_score', models.FloatField(default=0.0)),
                ('feasibility_score', models.FloatField(default=0.0)),
                ('completeness_score', models.FloatField(default=0.0)),
                ('summary', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Startup Application',
                'verbose_name_plural': 'Startup Applications',
            },
        ),
        migrations.CreateModel(
            name='SuccessData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revenue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('employee_count', models.PositiveIntegerField()),
                ('comparable_company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='foundry.comparablecompany')),
            ],
            options={
                'verbose_name': 'Success Data',
                'verbose_name_plural': 'Success Data',
            },
        ),
        migrations.CreateModel(
            name='EvaluationScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('originality_score', models.FloatField()),
                ('marketability_score', models.FloatField()),
                ('feasibility_score', models.FloatField()),
                ('completeness_score', models.FloatField()),
                ('startup_application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='foundry.startupapplication')),
            ],
        ),
        migrations.AddField(
            model_name='comparablecompany',
            name='startups',
            field=models.ManyToManyField(related_name='comparable_companies', to='foundry.StartupApplication'),
        ),
    ]
